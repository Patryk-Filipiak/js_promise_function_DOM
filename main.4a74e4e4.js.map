{"version":3,"sources":["scripts/main.js"],"names":["ONLY_ONCE","waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","once","printMessage","message","div","document","createElement","textContent","classList","body","append","module","exports"],"mappings":";AAAA,aAGA,IAAMA,GAAY,EAElB,SAASC,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GAAWH,OAAAA,EAAQI,iBAAiBH,EAAW,WAChEE,OAAAA,EAAQ,UAAUF,OAAAA,EACbD,qBAAAA,GAAAA,OAAAA,EAAQK,SAAiBL,UAAAA,OAAAA,EAAQM,GAD/B,OACuC,CAC9CC,KAAMT,MAIV,IAAMU,EAAe,SAACC,GACdC,IAAAA,EAAMC,SAASC,cAAc,OAEnCF,EAAIG,YAAcJ,EAClBC,EAAII,UAAY,UAChBH,SAASI,KAAKC,OAAON,IAGvBO,OAAOC,QAAU,CACfnB,QAAAA,EACAS,aAAAA","file":"main.4a74e4e4.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// handle every event only once time?\nconst ONLY_ONCE = false;\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => element.addEventListener(eventName, () =>\n    resolve(`It was ${eventName} on the element: `\n    + `${element.nodeName}, id: ${element.id}.`), {\n    once: ONLY_ONCE,\n  }));\n}\n\nconst printMessage = (message) => {\n  const div = document.createElement('div');\n\n  div.textContent = message;\n  div.classList = 'message';\n  document.body.append(div);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}